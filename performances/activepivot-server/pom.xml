<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.activeviam.sandbox</groupId>
		<artifactId>sandbox-activeviam</artifactId>
		<version>5.5.10</version>
	</parent>
	<artifactId>sandbox-activepivot-server</artifactId>
	<packaging>war</packaging>
	<name>Sandbox ActivePivot Server</name>

	<dependencies>
		<dependency>
			<groupId>com.activeviam.sandbox</groupId>
			<artifactId>sandbox-activepivot</artifactId>
		</dependency>

		<!-- Xerces override -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>com.activeviam.sandbox</groupId>
			<artifactId>sandbox-activepivot</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.activeviam.activepivot</groupId>
			<artifactId>activepivot-ws-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.activeviam.activepivot</groupId>
			<artifactId>activepivot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-annotations</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.210</version>
			<scope>test</scope>
		</dependency>

		<!-- Connection pool. Scope test to use import it only when using Jetty Server.
		Automatically provided when the application is deployed in a tomcat. -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>8.0.36</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- We call the maven dependency plugin to unpack the resources included in the jar of dependant project
			once unpacked, the resources will be put to ${project.build.directory}/${project.build.finalName}
			so that they will be put at the root of the web
			application in the war packaging -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-cube-descriptions-and-properties</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!-- Unpack *.properties from sandbox-common.jar -->
								<artifactItem>
									<groupId>com.activeviam.sandbox</groupId>
									<artifactId>sandbox-common</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<includes>*.properties</includes>
								</artifactItem>
								<!-- Unpack *.xml, *.properties from sandbox-activepivot.jar -->
								<artifactItem>
									<groupId>com.activeviam.sandbox</groupId>
									<artifactId>sandbox-activepivot</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<includes>DESC-INF/*.xml,i18n/**,jgroups-protocols/*.xml,ROLE-INF/**/*.xml,*.properties</includes>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<configuration>
					<classpathScope>test</classpathScope>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!-- Workaround for m2e unsupported plugins -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
	</build>
	
</project>