<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<measures xmlns="http://www.quartetfs.com"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.quartetfs.com ../activepivot-types.xsd">

    <!--The two basis PP through which every PP works are FOREX.SUM (which is hidden, because it allows to meaningless
        add price) and Forex.AVG (which is used in almost every PP)-->

	<!--Measures-->
    <measure name="CLOSE.SUM" field="Close" visible="false" />
    <measure name="Close.AVG" field="Close" visible="false" aggregation="AVG" />

    <measure field="Volume" folder="data" formatter="DOUBLE[#,###;-#,###]" />
    <measure field="NumberStocks" folder="data" formatter="DOUBLE[#,###;-#,###]" />

    <!--Forex : we carry out the currency conversion of the basis value that is to mean the hidden one
        Thus only the forex's values will have an impact on the following computation-->
    <postProcessor name="FOREX.SUM" visible="false" pluginKey="FOREX" underlyingMeasures="CLOSE.SUM">
        <properties>
            <entry key="leafLevels" value="StockSymbol@StockSymbol@StockSymbol" />
            <!-- TODO : the default value is hard coded ! -->
            <entry key="initialCurrency" value="EUR" />
        </properties>
    </postProcessor>

    <postProcessor name="Forex.AVG" folder="forex" pluginKey="FOREX" underlyingMeasures="Close.AVG"
                   formatter="DOUBLE[#,###.00;-#,###.00]" continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="leafLevels" value="StockSymbol@StockSymbol@StockSymbol" />
            <entry key="initialCurrency" value="EUR" />
        </properties>
    </postProcessor>

	<!--The prices should not be added when corresponding to different products
        However, one accepts to average price of different products-->
    <postProcessor name="Forex.SUM" pluginKey="MINIMUM_DEPTH" underlyingMeasures="FOREX.SUM" folder="forex"
                   formatter="DOUBLE[#,###.00;-#,###.00]" continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="hierarchyName" value="StockSymbol" />
            <entry key="minimumDepth" value="1" />
        </properties>
    </postProcessor>

    <!--One accepts to aggregate the stock number-->

    <!--Computing the portfolio value-->
    <postProcessor name="PortfolioValue" pluginKey="PORTFOLIO_VALUE" folder="postProc"
                   underlyingMeasures="NumberStocks.SUM,Forex.AVG" formatter="DOUBLE[#,###.00;-#,###.00]"
                   continuousQueryHandlers="STORED, FOREX_HANDLER" >
        <properties>
            <entry key="leafLevels" value="StockSymbol@StockSymbol@StockSymbol" />
            <entry key="aggregatedFunctions" value="SUM" />
            <entry key="outputType" value="double" />
        </properties>
    </postProcessor>

    <!--Computing the weight of the portfolio components-->
    <postProcessor name="PortfolioValueWeights" pluginKey="FORMULA" folder="postProc" formatter="DOUBLE[#,##0.00%;-#,##0.00%]"
                   continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="formula" value="aggregatedValue[PortfolioValue],aggregatedValue[TotalPortfolioValue],int[0],div" />
        </properties>
    </postProcessor>

    <!--We compute the TotalPortfolioValue regarding to two dimensions : StockSymbol and CompaniesRegroupement
        Thus we combine two TOTAL_PORTFOLIO_VALUE post-processor. That suit well.
        However it is not optimized nor an intelligent design.
        TODO : One should better recode the TOTAL_PORTFOLIO_VALUE post-processor so as to accept a
        TODO : list of level to shift ! -->
    <postProcessor name="TotalPortfolioValue" pluginKey="TOTAL_PORTFOLIO_VALUE" folder="hidden"
                   underlyingMeasures="TotalPortfolioValueIntermed">
        <properties>
            <entry key="levelToShift" value="StockSymbol@StockSymbol@StockSymbol" />
        </properties>
    </postProcessor>

    <postProcessor name="TotalPortfolioValueIntermed" pluginKey="TOTAL_PORTFOLIO_VALUE" visible="false"
                   underlyingMeasures="PortfolioValue" >
        <properties>
            <entry key="levelToShift" value="Name@CompaniesRegroupment@CompaniesRegroupment" />
        </properties>
    </postProcessor>

    <!--Computing the period return-->
    <postProcessor name="PeriodReturn" folder="postProc" pluginKey="FORMULA" formatter="DOUBLE[#,###.00;-#,###.00]"
                   continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="formula" value="aggregatedValue[PortfolioValue],aggregatedValue[PreviousPortfolioValue],-" />
        </properties>
    </postProcessor>

    <postProcessor name="PeriodReturnPercent" folder="postProc" pluginKey="FORMULA" formatter="DOUBLE[#,##0.00%;-#,##0.00%]"
                   continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="formula" value="(aggregatedValue[PeriodReturn],aggregatedValue[PreviousPortfolioValue],int[0],div)" />
        </properties>
    </postProcessor>

    <postProcessor name="PreviousPortfolioValue" pluginKey="NeighborValue" folder="hidden">
        <properties>
            <entry key="timeHierarchyName" value="HistoricalDates" />
            <entry key="streamMeasureName" value="PortfolioValue" />
            <entry key="direction" value="previous" />
            <entry key="memberToRemove" value="0" />
            <entry key="reverseDimensionOrder" value="false" />
        </properties>
    </postProcessor>

    <!--Computing the cumulative return-->
    <postProcessor name="CumulativeReturn" isIntrospectionMeasure="false" folder="postProc" pluginKey="Stream2Position"
                   formatter="DOUBLE[#,###.00;-#,###.00]" continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="timeHierarchyName" value="HistoricalDates" />
            <entry key="streamMeasureName" value="PeriodReturn" />
            <entry key="positionType" value="CURRENT_STREAM" />
            <entry key="reverseDimensionOrder" value="false" />
        </properties>
    </postProcessor>

    <postProcessor name="CumulativeReturnPercent" pluginKey="FORMULA" folder="postProc" formatter="DOUBLE[#,##0.00%;-#,##0.00%]"
                   continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="formula" value="((aggregatedValue[PortfolioValue], aggregatedValue[InitialValue], -),aggregatedValue[InitialValue],/)"/>
        </properties>
    </postProcessor>

    <postProcessor name="InitialValue" pluginKey="INITIAL_VALUE" folder="hidden">
        <properties>
            <entry key="timeHierarchyName" value="HistoricalDates" />
            <entry key="streamMeasureName" value="PortfolioValue" />
            <entry key="reverseDimensionOrder" value="false" />
            <entry key="memberToRemove" value="0" />
        </properties>
    </postProcessor>

    <!--The difference in performance between portfolios-->
    <postProcessor name="CompareExample2Portfolio" pluginKey="FORMULA" folder="postProc" formatter="DOUBLE[#,###.00;-#,###.00]"
                   continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="formula" value="aggregatedValue[ExamplePV],aggregatedValue[BenchmarkPV],-"/>
        </properties>
    </postProcessor>

    <postProcessor name="CompareExample2PortfolioPercent" pluginKey="FORMULA" folder="postProc"
                   formatter="DOUBLE[#,##0.00%;-#,##0.00%]" continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="formula" value="(aggregatedValue[CompareExample2Portfolio],aggregatedValue[BenchmarkPV],int[0],div)"/>
        </properties>
    </postProcessor>

    <postProcessor name="ExamplePV" folder="hidden" pluginKey="CHOOSE_PV_TYPE" underlyingMeasures="PortfolioValue">
        <properties>
            <entry key="levelToShift" value="IndexName@IndexName@IndexName" />
            <entry key="hierarchyNameToForbid" value="IndexName" />
            <entry key="portfolioType" value="exemple" />
        </properties>
    </postProcessor>

    <postProcessor name="BenchmarkPV" folder="hidden" pluginKey="CHOOSE_PV_TYPE" underlyingMeasures="PortfolioValue">
        <properties>
            <entry key="hierarchyNameToForbid" value="IndexName" />
            <entry key="levelToShift" value="IndexName@IndexName@IndexName" />
            <entry key="portfolioType" value="benchmark" />
        </properties>
    </postProcessor>

    <!--Display Forex-->
    <postProcessor name="ForexRate" folder="forexRate" pluginKey="DISPLAY"
                   continuousQueryHandlers="STORED, FOREX_HANDLER">
        <properties>
            <entry key="hierForex" value="ForexHier" />
            <!--This property is crucial to display the rate. Indeed, ForexHier is an analysis hierarchy with an allMember.
                Without this add, the evaluate function will never be called if displaying the Forex Level.
                And if one would wish to display the Forex Dimension, the currency would not be available but only
                the allMember location.
                Check : https://support.activeviam.com/confluence/pages/viewpage.action?spaceKey=AP5&title=Analysis+hierarchies -->
            <entry key="analysisLevels" value="Currency@ForexHier@ForexDim" />
        </properties>
    </postProcessor>

</measures>